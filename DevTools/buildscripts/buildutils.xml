<project name="BuildUtils">

	<target name="copy-libs">

		<echo>Copying library files from : ${src.dir}  ${build.dir}/lib</echo>

		<!--<copy file="${sourceCodeDir}/lib/at.jku.ase.logging.jar" todir="${result.dirname}/build/lib" />
		<copy file="${sourceCodeDir}/lib/log4j-1.2.16.jar" todir="${result.dirname}/build/lib" />-->


		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/apache/commons-lang-2.5.jar" todir="${build.dir}/lib" />
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/apache/commons-io-2.4.jar"   todir="${build.dir}/lib" />

		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/xstream/xmlpull-1.1.3.1.jar" todir="${build.dir}/lib" />
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/xstream/xpp3_min-1.1.4c.jar" todir="${build.dir}/lib" />
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/xstream/xstream-1.4.9.jar"   todir="${build.dir}/lib" />


		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/google/guava-20.0.jar"   todir="${build.dir}/lib" />
		
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/json/gson-2.2.4.jar"   todir="${build.dir}/lib" />
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/json/json-20110217.jar"   todir="${build.dir}/lib" />

		
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/stateless/slf4j-api-1.7.25.jar"   todir="${build.dir}/lib" />
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/stateless/slf4j-simple-1.7.25.jar"   todir="${build.dir}/lib" />
		<copy file="{src.dir}/../../../edu.nd.dronology.libs/lib/stateless/stateless4j-2.5.0.jar"   todir="${build.dir}/lib" />
		
	</target> 




	<target name="-copy-logger">
		<copy file="${publish.dir}/${jar.logger}" tofile="${build.dir}/lib/${jar.logger}" overwrite="true" />
	</target>

	<target name="-copy-core">
		<copy file="${publish.dir}/${jar.core}" tofile="${build.dir}/lib/${jar.core}" overwrite="true" />
	</target>

	<target name="-copy-util">
		<copy file="${publish.dir}/${jar.util}" tofile="${build.dir}/lib/${jar.util}" overwrite="true" />
	</target>



	<target name="check-preconditions">
		<!-- check if properties are set -->
		<fail message="Properties &quot;tmp.dir&quot; and &quot;src.dir&quot; need to be set to a value">
			<condition>
				<and>
					<or>
						<equals arg1="${tmp.dir}" arg2="" />
						<not>
							<isset property="tmp.dir" />
						</not>
					</or>
					<or>
						<equals arg1="${src.dir}" arg2="" />
						<not>
							<isset property="src.dir" />
						</not>
					</or>
				</and>
			</condition>
		</fail>
	</target>

	<target name="cleanup">

		<!-- Cleanup (we only want to see the .dot and .jar files) -->
		<delete dir="${tmp.dir}" />
		<delete dir="${cob.instrumented.dir}" />
	</target>



	<target name="pack">
		<!-- Package the runnable jar file -->
		<jar destfile="${tmp.dir}/jar/${result.filename}" basedir="${build.dir}/bin">
			<!--	<fileset dir="${resultdir}/build/src" includes="**/*.java"/>
			<zipfileset dir="${result.dirname}/build/bin" prefix="" />
					<zipfileset src="${result.dirname}/build/lib/at.jku.ase.logging.jar" />
					<zipfileset src="${result.dirname}/build/lib/log4j-1.2.16.jar" />
					<zipfileset src="${result.dirname}/build/lib/json-20110217.jar" />
					<zipfileset src="${result.dirname}/build/lib/commons-collections-3.2.1.jar" /> -->

		</jar>
	</target>


	<target name="prepare">
		<!-- Clean/Create the build directory structure used by compile -->
		<delete dir="${tmp.dir}" />
		<!--<delete dir="${publish.dir}" />-->
		<mkdir dir="${tmp.dir}" />
		<mkdir dir="${tmp.dir}/build/src" />
		<mkdir dir="${tmp.dir}/build/bin" />
		<mkdir dir="${tmp.dir}/build/lib" />
	</target>

	<target name="prepare-build">

		<delete dir="${publish.dir}" />

	</target>

</project>

