<project name="build-dronology.core" default="dronology-core">
	<import file="./buildutils.xml" />



	<target name="dronology-core">
		<echo>Building jar on ${os.name} ${os.version} ${os.arch}, java architecture: ${sun.arch.data.model}, java version: ${java.version}</echo>
		<property name="result.dirname" value="${buildDir}/result" />
		<property name="result.filename" value="${jar.core}" />


		<antcall target="preparedirs" inheritall="true" />
		<antcall target="copy-source" inheritall="true" />
		<antcall target="junit" inheritall="true" />
		<!-- <antcall target="cleanup" inheritall="true" />-->


	</target>


	<target name="preparedirs">
		<!-- Clean/Create the build directory structure used by compile -->
		<delete dir="${report.dir}" />
		<mkdir dir="${report.dir}" />
	</target>


	<target name="copy-source">
		<!-- Copy required files -->
		<echo>copy: ${sourceCodeDir} to : ${result.dirname}/build/src  </echo>
		<copy todir="${result.dirname}/build/src">
			<fileset dir="${sourceCodeDir}" />
		</copy>

		<copy todir="${result.dirname}/build/src">
			<fileset dir="${sourceCodeDir}/../edu.nd.dronology.core/src" />
			<fileset dir="${sourceCodeDir}/../edu.nd.dronology.core/code" />
			<fileset dir="${sourceCodeDir}/../edu.nd.dronology.core/test" />
		</copy>


	</target>


	<!-- Compile Java source from ${src.dir} and output it to ${web.classes.dir} -->
	<target name="compile" description="compile source code">

	</target>



	<target name="junit" depends="compile">

		<junit printsummary="yes" haltonfailure="no">

			<!--
			<classpath location="lib/junit-4.11.jar" />
			<classpath location="lib/hamcrest-core-1.3.jar" />
		-->

			<classpath location="${test.classes.dir}" />

			<formatter type="xml" />
			<formatter type="plain" />

			<batchtest fork="yes" todir="${report.dir}">
				<fileset dir="${result.dirname}/build/src">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
			
			
			

			
			

		</junit>
	</target>
</project>